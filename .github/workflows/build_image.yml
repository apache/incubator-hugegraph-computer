name: Package hugegraph-computer image

on:
  workflow_dispatch:
    inputs:
      repository_branch:
        required: true
        default: 'master'
      framework_image_url:
        required: true
        default: 'hugegraph-computer:0.1.0'
      algorithm_image_url:
        required: true
        default: 'hugegraph-computer-algorithm:0.1.0'
      operator_image_url:
        required: true
        default: 'hugegraph-computer-operator:0.1.0'
      build_operator:
        required: true
        deault: 'false'
      release_tag:
        required: true

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - run: docker version

      - name: Install JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.repository_branch }}
          fetch-depth: 2

      - name: Replace jar
        env:
          TRAVIS_DIR: computer-dist/src/assembly/travis
        run: |
          mvn install:install-file -Dfile=$TRAVIS_DIR/lib/hugegraph-client-1.9.7.jar -DgroupId=com.baidu.hugegraph -DartifactId=hugegraph-client -Dversion=1.9.7 -Dpackaging=jar -DpomFile=$TRAVIS_DIR/lib/client-pom.xml
          mvn install:install-file -Dfile=$TRAVIS_DIR/lib/hugegraph-common-1.8.9.jar -DgroupId=com.baidu.hugegraph -DartifactId=hugegraph-common -Dversion=1.8.9 -Dpackaging=jar -DpomFile=$TRAVIS_DIR/lib/common-pom.xml

      - name: Build Project
        run: bash computer-dist/builddocker.sh

      - name: Docker build
        run: |
          PROJECT_VERSION=$(mvn -f "./pom.xml" -q -N \
          org.codehaus.mojo:exec-maven-plugin:1.3.1:exec \
          -Dexec.executable='echo' -Dexec.args='${project.version}')

          docker tag hugegraph/hugegraph-computer-framework:${PROJECT_VERSION} ${{ github.event.inputs.framework_image_url }}
          echo "FROM ${{ github.event.inputs.framework_image_url }}
          LABEL maintainer='HugeGraph Docker Maintainers <hugegraph@googlegroups.com>'
          COPY target/computer-algorithm-*.jar /opt/jars/computer-algorithm-based.jar
          ENV JAR_FILE_PATH=/opt/jars/computer-algorithm-based.jar" | \
          docker build -t ${{ github.event.inputs.algorithm_image_url }} -f - ./computer-algorithm

      - name: Docker build operator
        if: github.event.inputs.build_operator == 'true'
        run: docker build -t ${{ github.event.inputs.operator_image_url }} -f computer-k8s-operator/Dockerfile ./computer-k8s-operator

      - name: Docker images
        run: docker images

      - name: Save image
        run: |
          mkdir artifacts
          chmod -R 777 ./artifacts
          docker save -o ./artifacts/hugegraph-computer-framework.tar ${{ github.event.inputs.framework_image_url }}
          docker save -o ./artifacts/hugegraph-computer-algorithm.tar ${{ github.event.inputs.algorithm_image_url }}

      - name: Upload github release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "./artifacts/*"
          tags: true
          draft: false
          overwrite: true
          tag_name: ${{ github.event.inputs.release_tag }}
